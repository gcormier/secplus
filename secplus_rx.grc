options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: secplus_rx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: decim1
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 204]
    rotation: 0
    state: enabled
- name: decim2
  id: variable
  parameters:
    comment: ''
    value: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 268]
    rotation: 0
    state: enabled
- name: freq
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: ''
    label: Frequency
    label0: 315 MHz
    label1: 390 MHz
    label2: ''
    label3: ''
    label4: ''
    labels: '[]'
    num_opts: '2'
    option1: '390150000'
    option2: '2'
    option3: '3'
    option4: '4'
    options: '[0, 1, 2]'
    orient: Qt.QHBoxLayout
    type: int
    value: '315150000'
    widget: radio_buttons
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 332.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '3000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 76]
    rotation: 0
    state: enabled
- name: threshold
  id: variable
  parameters:
    comment: ''
    value: '0.05'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 332]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_0
  id: blocks_complex_to_mag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 184.0]
    rotation: 0
    state: enabled
- name: blocks_rotator_cc_0
  id: blocks_rotator_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    phase_inc: 2 * math.pi * -300e3 / samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 180.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 404]
    rotation: 0
    state: enabled
- name: limesdr_source_0
  id: limesdr_source
  parameters:
    affinity: ''
    alias: ''
    allow_tcxo_dac: '0'
    analog_bandw_ch0: '0'
    analog_bandw_ch1: 1.5e6
    calibr_bandw_ch0: 2.5e6
    calibr_bandw_ch1: 2.5e6
    channel_mode: '0'
    comment: ''
    dacVal: '180'
    digital_bandw_ch0: '0'
    digital_bandw_ch1: samp_rate
    filename: ''
    gain_dB_ch0: '6'
    gain_dB_ch1: '1'
    lna_path_ch0: '1'
    lna_path_ch1: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
    nco_freq_ch0: '0'
    nco_freq_ch1: '0'
    oversample: '0'
    rf_freq: freq
    samp_rate: samp_rate
    serial: 1D4C29E4AA7E8D
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [319, 516]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: 100000 // decim1 // decim2
    srate: samp_rate // decim1 // decim2
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: threshold
    tr_mode: qtgui.TRIG_MODE_AUTO
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '2'
    ymin: '0'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 364.0]
    rotation: 180
    state: enabled
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: decim1
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: ''
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [648, 156.0]
    rotation: 0
    state: enabled
- name: rational_resampler_xxx_1
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: decim2
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[1.0/decim2]*decim2'
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 316.0]
    rotation: 180
    state: enabled
- name: secplus_decode
  id: epy_block
  parameters:
    _source_code: "#\n# Copyright 2016 Clayton Smith (argilo@gmail.com)\n#\n# This\
      \ file is part of secplus.\n#\n# secplus is free software: you can redistribute\
      \ it and/or modify\n# it under the terms of the GNU General Public License as\
      \ published by\n# the Free Software Foundation, either version 3 of the License,\
      \ or\n# (at your option) any later version.\n#\n# secplus is distributed in\
      \ the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even\
      \ the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\
      \  See the\n# GNU General Public License for more details.\n#\n# You should\
      \ have received a copy of the GNU General Public License\n# along with secplus.\
      \  If not, see <http://www.gnu.org/licenses/>.\n#\n\nfrom __future__ import\
      \ print_function\nimport numpy as np\nfrom gnuradio import gr\nimport secplus\n\
      \n\nclass blk(gr.sync_block):\n    \"\"\"Decoder for Chamberlain garage door\
      \ openers\"\"\"\n\n    def __init__(self, samp_rate=10000, threshold=0.02):\n\
      \        gr.sync_block.__init__(\n            self,\n            name='Security+\
      \ Decoder',\n\n            in_sig=[np.float32],\n            out_sig=[]\n  \
      \      )\n        self.samp_rate = samp_rate\n        self.threshold = threshold\n\
      \        self.last_sample = 0.0\n        self.last_rise = 0\n        self.buffer\
      \ = []\n        self.last_pair = []\n        self.pair = []\n\n    def work(self,\
      \ input_items, output_items):\n        for n, sample in enumerate(input_items[0]):\n\
      \            current_sample = self.nitems_read(0) + n\n            if self.last_sample\
      \ < self.threshold <= sample:\n                # rising edge\n             \
      \   self.last_rise = current_sample\n            elif self.last_sample >= self.threshold\
      \ > sample:\n                # falling edge\n                on_samples = current_sample\
      \ - self.last_rise\n                self.process_symbol(on_samples)\n      \
      \      if current_sample - self.last_rise > 3.25e-3 * self.samp_rate:\n    \
      \            self.buffer = []\n            self.last_sample = sample\n     \
      \   return len(input_items[0])\n\n    def process_symbol(self, on_samples):\n\
      \        if on_samples < 0.35e-3 * self.samp_rate:\n            self.buffer\
      \ = []\n        elif on_samples < 0.75e-3 * self.samp_rate:\n            self.buffer.append(0)\n\
      \        elif on_samples < 1.25e-3 * self.samp_rate:\n            self.buffer.append(1)\n\
      \        elif on_samples < 1.75e-3 * self.samp_rate:\n            self.buffer.append(2)\n\
      \        else:\n            self.buffer = []\n\n        if len(self.buffer)\
      \ == 21:\n            self.process_buffer()\n            self.buffer = []\n\n\
      \    def process_buffer(self):\n        if self.buffer[0] == 0:\n          \
      \  self.pair = self.buffer[1:21]\n        elif len(self.pair) == 20 and self.buffer[0]\
      \ == 2:\n            self.pair += self.buffer[1:21]\n\n        if len(self.pair)\
      \ == 40 and self.pair != self.last_pair:\n            rolling, fixed = secplus.decode(self.pair)\n\
      \            print(secplus.pretty(rolling, fixed))\n            self.last_pair\
      \ = self.pair\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate // decim1 // decim2
    threshold: threshold
  states:
    _io_cache: ('Security+ Decoder', 'blk', [('samp_rate', '10000'), ('threshold',
      '0.02')], [('0', 'float', 1)], [], 'Decoder for Chamberlain garage door openers',
      ['samp_rate', 'threshold'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 292.0]
    rotation: 180
    state: enabled

connections:
- [blocks_complex_to_mag_0, '0', rational_resampler_xxx_1, '0']
- [blocks_rotator_cc_0, '0', rational_resampler_xxx_0, '0']
- [limesdr_source_0, '0', blocks_rotator_cc_0, '0']
- [rational_resampler_xxx_0, '0', blocks_complex_to_mag_0, '0']
- [rational_resampler_xxx_1, '0', qtgui_time_sink_x_0, '0']
- [rational_resampler_xxx_1, '0', secplus_decode, '0']

metadata:
  file_format: 1
